custom-eyzee-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 1.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 8
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

akka {
  actor {
    provider = "cluster"
    serializers {
    jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }
    serialization-bindings {
        "commands.Command" = jackson-json
    }
  }

#   remote.artery {
#     canonical {
#       hostname = "127.0.0.1"
#       port = 2552
#     }
#   }

  cluster {
    seed-nodes = [
      "akka://Eyzee_Actor_System@127.0.0.1:2551"
      ,"akka://Eyzee_Actor_System@127.0.0.1:2552"
      ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider" # static-quorum, keep-majority, keep-oldest, down-all, lease-majority
  }
}